{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isStarted","setIsStarted","visibleGoods","goods","LENGTH","sort","g1","g2","length","ALPABET","localeCompare","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EA/BR,SACEC,EACAP,EACAE,GAEA,IAAMI,EAAY,YAAOC,GAEzB,OAAQP,GACN,KAAKL,EAASa,OACZF,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAC7C,MACF,KAAKjB,EAASkB,QACZP,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,cAAcH,MAEjD,KAAKhB,EAASI,MAShB,OAJIG,GACFI,EAAaS,UAGRT,EAQcU,CACnBpB,EAAiBI,EAAUE,GAG7B,OACE,qBAAKe,UAAU,MAAf,SACIb,EAUE,qCACE,wBACEc,KAAK,SACLC,QAAS,kBAAMlB,EAAYN,EAASkB,UAFtC,iCAOA,wBACEK,KAAK,SACLC,QAAS,kBAAMlB,EAAYN,EAASa,SAFtC,4BAOA,wBACEU,KAAK,SACLC,QAAS,kBAAMhB,GAAeD,IAFhC,qBAOA,wBACEgB,KAAK,SACLC,QAAS,WACPlB,EAAYN,EAASI,MACrBI,GAAc,IAJlB,mBAUA,oBAAIc,UAAU,QAAd,SACGX,EAAac,KAAI,SAAAC,GAAI,OACpB,6BACGA,GADMA,WA1Cf,wBACEH,KAAK,SACLC,QAAS,kBAAMd,GAAa,IAF9B,sBC1DViB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.873da739.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, sortType, isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setIsStarted(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}